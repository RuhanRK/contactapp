{"version":3,"sources":["context.jsx","components/layout/Header.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/contacts/InputFormGroup.jsx","components/contacts/AddToContact.jsx","components/contacts/EditToContact.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","Fragment","className","Link","to","Contact","isShowInfo","showInfo","deleteContact","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","bind","Contacts","Contact_Contact","InputFormGroup","label","placeholder","inputChange","error","htmlFor","classnames","is-invalid","onChange","defaultProps","AddToContact","e","target","inputSubmit","_this$state$contact","newContact","preventDefault","abrupt","post","history","push","_this$state$contact2","onSubmit","contacts_InputFormGroup","EditToContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","Header_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0RAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OACrB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAG7C,IAAK,cACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAE5C,IAAK,iBACD,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAChCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACvBD,EAAUN,EAAOQ,QAClBF,MAGlB,QACI,OAAOP,IAINa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAQ,CACJK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAHlEe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAO0BC,IAAMC,IACpB,8CARZ,OAOcN,EAPdE,EAAAK,KAUQ9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OAVtC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAaQ,OACIiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OACzBkB,KAAKmC,MAAMC,cAf5BzC,EAAA,CAA8B0C,aAqBjBC,EAAW5D,EAAQ4D,iBClDXC,mLACR,IACGC,EAAaxC,KAAKmC,MAAlBK,SACR,OACIP,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,gEACXT,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,aACXT,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,gBACnBT,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,gBADjB,IACmCF,IAGvCP,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,sBACVT,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,YACVT,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,eAAeF,UAAU,YAC9BT,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,qBADjB,iBAKJT,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,YACVT,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,YACxBT,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,2BAA4B,IAD7C,qBApBIL,aCEfQ,6MACjB/D,MAAQ,CACJgE,YAAY,KAGhBC,SAAW,WACPjD,EAAKc,SAAS,CACVkC,YAAahD,EAAKhB,MAAMgE,gBAKhCE,oDAAgB,SAAA1B,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEFC,IAAMqB,OAAN,8CAAAzD,OAC4CF,IAH1C,OAKRqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IALpCmC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAyB,GAAAzB,EAAA,SAORd,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAPpC,wBAAAmC,EAAAO,SAAAV,EAAAtB,KAAA,4IAUP,IAAAmD,EAAAnD,KAAAoD,EAC8BpD,KAAKmC,MAAM9C,QAAtCC,EADH8D,EACG9D,GAAI+D,EADPD,EACOC,KAAMC,EADbF,EACaE,MAAOC,EADpBH,EACoBG,MACzB,OACItB,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,uBACXT,EAAAb,EAAAc,cAAA,UACKmB,EACDpB,EAAAb,EAAAc,cAAA,KACIQ,UAAU,wBACVc,QAASL,EAAKJ,WAElBd,EAAAb,EAAAc,cAAA,KACIQ,UAAU,2BACVc,QAASL,EAAKH,cAAcS,KACxBN,EACA7D,EACAqB,KAGRsB,EAAAb,EAAAc,cAACS,EAAA,EAAD,CAAMC,GAAE,gBAAApD,OAAkBF,IACtB2C,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,4BAGpBS,EAAKrE,MAAMgE,YACRb,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,cACVT,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,mBAAd,UACYY,GAEZrB,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,mBAAd,UACYa,cAtDXlB,aCFhBqB,mLAEb,OACIzB,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACE7B,EAAa6B,EAAb7B,SACR,OACI8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,kBACVT,EAAAb,EAAAc,cAAA,QAAMQ,UAAU,gBAAhB,WAA8C,IADlD,WAICvD,EAASO,IAAI,SAAAL,GAAO,OACjB4C,EAAAb,EAAAc,cAACyB,EAAD,CAAStE,QAASA,EAAS0B,IAAK1B,EAAQC,iBAblC+C,8BCAhCuB,EAAiB,SAAAzB,GAAS,IACpB0B,EAA8D1B,EAA9D0B,MAAO7E,EAAuDmD,EAAvDnD,KAAMqE,EAAiDlB,EAAjDkB,KAAMS,EAA2C3B,EAA3C2B,YAAa9C,EAA8BmB,EAA9BnB,MAAO+C,EAAuB5B,EAAvB4B,YAAaC,EAAU7B,EAAV6B,MAC5D,OACI/B,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,cACXT,EAAAb,EAAAc,cAAA,SAAO+B,QAASZ,GAAOQ,GACvB5B,EAAAb,EAAAc,cAAA,SACIlD,KAAMA,EACN0D,UAAWwB,IAAW,+BAAgC,CAClDC,aAAcH,IAElB1E,GAAI+D,EACJA,KAAMA,EACNS,YAAaA,EACb9C,MAAOA,EACPoD,SAAUL,IAEbC,GAAS/B,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,oBAAoBsB,MAgB7DJ,EAAeS,aAAe,CAC1BrF,KAAM,QAGK4E,QCpCMU,6MACjBxF,MAAQ,CACJO,QAAS,CACLgE,KAAM,GACNC,MAAO,GACPC,MAAO,IAEXS,MAAO,MAGXD,YAAc,SAAAQ,GAAK,IACTlF,EAAYS,EAAKhB,MAAjBO,QACNA,EAAQkF,EAAEC,OAAOnB,MAAQkB,EAAEC,OAAOxD,MAClClB,EAAKc,SAAS,CAAEvB,eAGpBoF,kDAAc,SAAAnD,EAAOX,EAAU4D,GAAjB,IAAAG,EAAArB,EAAAC,EAAAC,EAAAoB,EAAApD,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACV4C,EAAEK,iBADQF,EAEqB5E,EAAKhB,MAAMO,QAAlCgE,EAFEqB,EAEFrB,KAAMC,EAFJoB,EAEIpB,MAAOC,EAFXmB,EAEWnB,MAEhBF,EAJK,CAAA5B,EAAAE,KAAA,eAKN7B,EAAKc,SAAS,CACVoD,MAAO,CAAEX,KAAM,4BANb5B,EAAAoD,OAAA,oBAWLvB,EAXK,CAAA7B,EAAAE,KAAA,eAYN7B,EAAKc,SAAS,CACVoD,MAAO,CAAEV,MAAO,6BAbd7B,EAAAoD,OAAA,oBAkBLtB,EAlBK,CAAA9B,EAAAE,KAAA,gBAmBN7B,EAAKc,SAAS,CACVoD,MAAO,CAAET,MAAO,6BApBd9B,EAAAoD,OAAA,yBAyBJF,EAAa,CACftB,OACAC,QACAC,SA5BM9B,EAAAE,KAAA,GA+BQC,IAAMkD,KAAN,6CAEdH,GAjCM,QA+BJpD,EA/BIE,EAAAK,KAmCVnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACVvB,QAAS,CACLgE,KAAM,GACNC,MAAO,GACPC,MAAO,MAKfzD,EAAKqC,MAAM4C,QAAQC,KAAK,KA/Cd,yBAAAvD,EAAAO,SAAAV,EAAAtB,yIAiDL,IAAAmD,EAAAnD,KAAAiF,EAC0BjF,KAAKlB,MAAMO,QAAlCgE,EADH4B,EACG5B,KAAMC,EADT2B,EACS3B,MAAOC,EADhB0B,EACgB1B,MACbS,EAAUhE,KAAKlB,MAAfkF,MACR,OACI/B,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,aACXT,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,eACXT,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,eAAd,gBAEJT,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,aACXT,EAAAb,EAAAc,cAAA,QACIgD,SAAU/B,EAAKsB,YAAYhB,KACvBN,EACAxC,IAGJsB,EAAAb,EAAAc,cAACiD,EAAD,CACItB,MAAM,OACNR,KAAK,OACLS,YAAY,kBACZE,MAAOA,EAAMX,KACbrC,MAAOqC,EACPU,YAAaZ,EAAKY,cAEtB9B,EAAAb,EAAAc,cAACiD,EAAD,CACItB,MAAM,QACN7E,KAAK,QACLqE,KAAK,QACLS,YAAY,mBACZE,MAAOA,EAAMV,MACbtC,MAAOsC,EACPS,YAAaZ,EAAKY,cAEtB9B,EAAAb,EAAAc,cAACiD,EAAD,CACItB,MAAM,SACNR,KAAK,QACLS,YAAY,oBACZE,MAAOA,EAAMT,MACbvC,MAAOuC,EACPQ,YAAaZ,EAAKY,cAGtB9B,EAAAb,EAAAc,cAAA,SACIlD,KAAK,SACLgC,MAAM,SACN0B,UAAU,2CAlHZL,aCArB+C,6MACjBtG,MAAQ,CACJO,QAAS,CACLgE,KAAM,GACNC,MAAO,GACPC,MAAO,IAEXS,MAAO,MAiBXD,YAAc,SAAAQ,GAAK,IACTlF,EAAYS,EAAKhB,MAAjBO,QACNA,EAAQkF,EAAEC,OAAOnB,MAAQkB,EAAEC,OAAOxD,MAClClB,EAAKc,SAAS,CAAEvB,eAGpBoF,kDAAc,SAAAnD,EAAOX,EAAU4D,GAAjB,IAAAG,EAAArB,EAAAC,EAAAC,EAAAoB,EAAArF,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACV4C,EAAEK,iBADQF,EAEqB5E,EAAKhB,MAAMO,QAAlCgE,EAFEqB,EAEFrB,KAAMC,EAFJoB,EAEIpB,MAAOC,EAFXmB,EAEWnB,MAEhBF,EAJK,CAAA5B,EAAAE,KAAA,eAKN7B,EAAKc,SAAS,CACVoD,MAAO,CAAEX,KAAM,4BANb5B,EAAAoD,OAAA,oBAWLvB,EAXK,CAAA7B,EAAAE,KAAA,eAYN7B,EAAKc,SAAS,CACVoD,MAAO,CAAEV,MAAO,6BAbd7B,EAAAoD,OAAA,oBAkBLtB,EAlBK,CAAA9B,EAAAE,KAAA,gBAmBN7B,EAAKc,SAAS,CACVoD,MAAO,CAAET,MAAO,6BApBd9B,EAAAoD,OAAA,yBAyBJF,EAAa,CACftB,OACAC,QACAC,SAGIjE,EAAOQ,EAAKqC,MAAMkD,MAAMC,OAAxBhG,GA/BEmC,EAAAE,KAAA,GAgCQC,IAAM2D,IAAN,8CAAA/F,OACgCF,GAC9CqF,GAlCM,QAgCJpD,EAhCIE,EAAAK,KAqCVnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAEhDjC,EAAKc,SAAS,CACVvB,QAAS,CACLgE,KAAM,GACNC,MAAO,GACPC,MAAO,MAKfzD,EAAKqC,MAAM4C,QAAQC,KAAK,KAhDd,yBAAAvD,EAAAO,SAAAV,EAAAtB,+QAnBFV,EAAOU,KAAKmC,MAAMkD,MAAMC,OAAxBhG,YACUsC,IAAMC,IAAN,8CAAArC,OACgCF,WAD5CiC,SAGAlC,EAAUkC,EAAIQ,KACd4C,EAAa,CACftB,KAAMhE,EAAQgE,KACdC,MAAOjE,EAAQiE,MACfC,MAAOlE,EAAQkE,OAEnBvD,KAAKY,SAAS,CAAEvB,QAASsF,uIA2DpB,IAAAxB,EAAAnD,KAAAiF,EAC0BjF,KAAKlB,MAAMO,QAAlCgE,EADH4B,EACG5B,KAAMC,EADT2B,EACS3B,MAAOC,EADhB0B,EACgB1B,MACbS,EAAUhE,KAAKlB,MAAfkF,MACR,OACI/B,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,aACXT,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,eACXT,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,eAAd,iBAIJT,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,aACXT,EAAAb,EAAAc,cAAA,QACIgD,SAAU/B,EAAKsB,YAAYhB,KACvBN,EACAxC,IAGJsB,EAAAb,EAAAc,cAACiD,EAAD,CACItB,MAAM,OACNR,KAAK,OACLS,YAAY,kBACZE,MAAOA,EAAMX,KACbrC,MAAOqC,EACPU,YAAaZ,EAAKY,cAEtB9B,EAAAb,EAAAc,cAACiD,EAAD,CACItB,MAAM,QACN7E,KAAK,QACLqE,KAAK,QACLS,YAAY,mBACZE,MAAOA,EAAMV,MACbtC,MAAOsC,EACPS,YAAaZ,EAAKY,cAEtB9B,EAAAb,EAAAc,cAACiD,EAAD,CACItB,MAAM,SACNR,KAAK,QACLS,YAAY,oBACZE,MAAOA,EAAMT,MACbvC,MAAOuC,EACPQ,YAAaZ,EAAKY,cAGtB9B,EAAAb,EAAAc,cAAA,SACIlD,KAAK,SACLgC,MAAM,SACN0B,UAAU,2CAnIXL,qCCS5BmD,EAZD,WACV,OACIvD,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,aAAd,yBACAT,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,QAAb,gCACAT,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,kBAAb,oBCOD+C,EAbE,WACb,OACIxD,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIQ,UAAU,aACVT,EAAAb,EAAAc,cAAA,QAAMQ,UAAU,eAAhB,OADJ,cAGAT,EAAAb,EAAAc,cAAA,KAAGQ,UAAU,QAAb,wCCkCDgD,gMA7BP,OACIzD,EAAAb,EAAAc,cAACyD,EAAD,KACI1D,EAAAb,EAAAc,cAAC0D,EAAA,EAAD,KACI3D,EAAAb,EAAAc,cAACD,EAAAb,EAAMqB,SAAP,KACIR,EAAAb,EAAAc,cAAC2D,EAAD,CAAQrD,SAAS,oBACjBP,EAAAb,EAAAc,cAAA,OAAKQ,UAAU,aACXT,EAAAb,EAAAc,cAAC4D,EAAA,EAAD,KACI7D,EAAAb,EAAAc,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjCzB,EAAAb,EAAAc,cAAC6D,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,eACLC,UAAW5B,IAEfrC,EAAAb,EAAAc,cAAC6D,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,oBACLC,UAAWd,IAEfnD,EAAAb,EAAAc,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWV,IACtCvD,EAAAb,EAAAc,cAAC6D,EAAA,EAAD,CAAOG,UAAWT,gBArBhCpD,cCAE8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCbNkB,IAASC,OAAQvE,EAAAb,EAAAc,cAAEuE,EAAF,MAAYC,SAASC,eAAe,SD4H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c82b4065.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\r\n            \"https://jsonplaceholder.typicode.com/users\"\r\n        );\r\n        this.setState({ contacts: res.data });\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const { branding } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 p-2 py-0\">\r\n                    <div className=\"container\">\r\n                        <Link to=\"/\" className=\"navbar-brand\">\r\n                            <i className=\"fas fa-home\" /> {branding}\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                    <i className=\"fas fa-user-plus\" /> Add\r\n                                    Contact\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\">\r\n                                    <i className=\"fas fa-question-circle\" />{\" \"}\r\n                                    About\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Contact extends Component {\r\n    state = {\r\n        isShowInfo: false\r\n    };\r\n\r\n    showInfo = () => {\r\n        this.setState({\r\n            isShowInfo: !this.state.isShowInfo\r\n        });\r\n    };\r\n\r\n    // remove contact\r\n    deleteContact = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(\r\n                `https://jsonplaceholder.typicode.com/users/${id}`\r\n            );\r\n            dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n        } catch (error) {\r\n            dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n        }\r\n    };\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}\r\n                                <i\r\n                                    className=\"fas fa-sort-down down\"\r\n                                    onClick={this.showInfo}\r\n                                />\r\n                                <i\r\n                                    className=\"fas fa-user-times remove\"\r\n                                    onClick={this.deleteContact.bind(\r\n                                        this,\r\n                                        id,\r\n                                        dispatch\r\n                                    )}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-user-edit edit\" />\r\n                                </Link>\r\n                            </h4>\r\n                            {this.state.isShowInfo && (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Email: {email}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Phone: {phone}\r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"./../../context\";\r\n\r\nexport default class Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-3\">\r\n                                <span className=\"text-primary\">Contact</span>{\" \"}\r\n                                Manager\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact contact={contact} key={contact.id} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputFormGroup = props => {\r\n    const { label, type, name, placeholder, value, inputChange, error } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input\r\n                    type={type}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": error\r\n                    })}\r\n                    id={name}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={inputChange}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nInputFormGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    inputChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nInputFormGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\n\r\nexport default InputFormGroup;\r\n","import React, { Component } from \"react\";\r\nimport InputFormGroup from \"./InputFormGroup\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AddToContact extends Component {\r\n    state = {\r\n        contact: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\"\r\n        },\r\n        error: {}\r\n    };\r\n\r\n    inputChange = e => {\r\n        let { contact } = this.state;\r\n        contact[e.target.name] = e.target.value;\r\n        this.setState({ contact });\r\n    };\r\n\r\n    inputSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state.contact;\r\n\r\n        if (!name) {\r\n            this.setState({\r\n                error: { name: \"Please Enter Your Name\" }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!email) {\r\n            this.setState({\r\n                error: { email: \"Please Enter Your Email\" }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!phone) {\r\n            this.setState({\r\n                error: { phone: \"Please Enter Your Phone\" }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post(\r\n            `https://jsonplaceholder.typicode.com/users`,\r\n            newContact\r\n        );\r\n        dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n        // clearInput\r\n        this.setState({\r\n            contact: {\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\"\r\n            }\r\n        });\r\n\r\n        // redirect to home page\r\n        this.props.history.push(\"/\");\r\n    };\r\n    render() {\r\n        const { name, email, phone } = this.state.contact;\r\n        const { error } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"text-center\">Add Contact</h3>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form\r\n                                        onSubmit={this.inputSubmit.bind(\r\n                                            this,\r\n                                            dispatch\r\n                                        )}\r\n                                    >\r\n                                        <InputFormGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter Your Name\"\r\n                                            error={error.name}\r\n                                            value={name}\r\n                                            inputChange={this.inputChange}\r\n                                        />\r\n                                        <InputFormGroup\r\n                                            label=\"Email\"\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter Your Email\"\r\n                                            error={error.email}\r\n                                            value={email}\r\n                                            inputChange={this.inputChange}\r\n                                        />\r\n                                        <InputFormGroup\r\n                                            label=\"Number\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter Your Number\"\r\n                                            error={error.phone}\r\n                                            value={phone}\r\n                                            inputChange={this.inputChange}\r\n                                        />\r\n\r\n                                        <input\r\n                                            type=\"submit\"\r\n                                            value=\"Submit\"\r\n                                            className=\"btn btn-block btn-success\"\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputFormGroup from \"./InputFormGroup\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nexport default class EditToContact extends Component {\r\n    state = {\r\n        contact: {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\"\r\n        },\r\n        error: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n        const contact = res.data;\r\n        const newContact = {\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        };\r\n        this.setState({ contact: newContact });\r\n    }\r\n\r\n    inputChange = e => {\r\n        let { contact } = this.state;\r\n        contact[e.target.name] = e.target.value;\r\n        this.setState({ contact });\r\n    };\r\n\r\n    inputSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state.contact;\r\n\r\n        if (!name) {\r\n            this.setState({\r\n                error: { name: \"Please Enter Your Name\" }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!email) {\r\n            this.setState({\r\n                error: { email: \"Please Enter Your Email\" }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!phone) {\r\n            this.setState({\r\n                error: { phone: \"Please Enter Your Phone\" }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            newContact\r\n        );\r\n\r\n        dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n        // clearInput\r\n        this.setState({\r\n            contact: {\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\"\r\n            }\r\n        });\r\n\r\n        // redirect to home page\r\n        this.props.history.push(\"/\");\r\n    };\r\n    render() {\r\n        const { name, email, phone } = this.state.contact;\r\n        const { error } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"text-center\">\r\n                                        Edit Contact\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form\r\n                                        onSubmit={this.inputSubmit.bind(\r\n                                            this,\r\n                                            dispatch\r\n                                        )}\r\n                                    >\r\n                                        <InputFormGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter Your Name\"\r\n                                            error={error.name}\r\n                                            value={name}\r\n                                            inputChange={this.inputChange}\r\n                                        />\r\n                                        <InputFormGroup\r\n                                            label=\"Email\"\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter Your Email\"\r\n                                            error={error.email}\r\n                                            value={email}\r\n                                            inputChange={this.inputChange}\r\n                                        />\r\n                                        <InputFormGroup\r\n                                            label=\"Number\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter Your Number\"\r\n                                            error={error.phone}\r\n                                            value={phone}\r\n                                            inputChange={this.inputChange}\r\n                                        />\r\n\r\n                                        <input\r\n                                            type=\"submit\"\r\n                                            value=\"Submit\"\r\n                                            className=\"btn btn-block btn-success\"\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <h1 className=\"display-4\">About Contact Manager</h1>\r\n                <p className=\"lead\">Simple app to manage Contact</p>\r\n                <p className=\"text-secondary\">Version 1.0.0</p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <h1 className=\"display-4\">\r\n                    <span className=\"text-danger\">404</span> Not Found\r\n                </h1>\r\n                <p className=\"lead\">Sorry, :( This page Doesn't exist</p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport { Provider } from \"./context\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddToContact from \"./components/contacts/AddToContact\";\nimport EditToContact from \"./components/contacts/EditToContact\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <React.Fragment>\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts} />\n                                <Route\n                                    exact\n                                    path=\"/contact/add\"\n                                    component={AddToContact}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/contact/edit/:id\"\n                                    component={EditToContact}\n                                />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route component={NotFound} />\n                            </Switch>\n                        </div>\n                    </React.Fragment>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}